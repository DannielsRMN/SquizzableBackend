# Generated by Django 5.2.1 on 2025-07-06 22:49

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('idEspecialidad', models.AutoField(primary_key=True, serialize=False)),
                ('nombreEspecialidad', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('idPregunta', models.AutoField(primary_key=True, serialize=False)),
                ('pregunta', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idUsuario', models.AutoField(primary_key=True, serialize=False)),
                ('fechaContratacion', models.DateField(blank=True, null=True)),
                ('puntos', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('especialidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.especialidad')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FotoPerfil',
            fields=[
                ('idFoto', models.AutoField(primary_key=True, serialize=False)),
                ('pfp', models.ImageField(blank=True, null=True, upload_to='usuarios/')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Modulo',
            fields=[
                ('idModulo', models.AutoField(primary_key=True, serialize=False)),
                ('nombreModulo', models.CharField(max_length=50)),
                ('dificultad', models.CharField(max_length=50)),
                ('especialidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.especialidad')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('idEvaluacion', models.AutoField(primary_key=True, serialize=False)),
                ('multiplicador', models.FloatField(default=0)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pregunta', models.ManyToManyField(to='api.pregunta')),
            ],
        ),
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('idAlternativa', models.AutoField(primary_key=True, serialize=False)),
                ('alternativa', models.CharField(max_length=250)),
                ('esCorrecta', models.BooleanField(default=False)),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pregunta')),
            ],
        ),
        migrations.CreateModel(
            name='Progreso',
            fields=[
                ('idProgreso', models.AutoField(primary_key=True, serialize=False)),
                ('fechaInicio', models.DateField(auto_now_add=True)),
                ('fechaFin', models.DateField(null=True)),
                ('ronda', models.IntegerField(default=1)),
                ('evaluacion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.evaluacion')),
            ],
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('idRespuesta', models.AutoField(primary_key=True, serialize=False)),
                ('alternativa', models.ManyToManyField(to='api.alternativa')),
                ('evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.evaluacion')),
            ],
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('idTema', models.AutoField(primary_key=True, serialize=False)),
                ('nombreTema', models.CharField(max_length=100)),
                ('contenido', models.TextField()),
                ('puntosTotal', models.IntegerField(default=0)),
                ('modulo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.modulo')),
            ],
        ),
        migrations.AddField(
            model_name='pregunta',
            name='tema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='api.tema'),
        ),
    ]
